{"version":3,"sources":["components/HeaderTop/HeaderTop.jsx","components/Content/Matches/MatchItem/MatchItem.jsx","components/Content/Matches/Matches.jsx","components/Content/Battles/BattleItem/BattleItem.jsx","components/Content/Battles/Battles.jsx","container/Games.js","App.js","serviceWorker.js","index.js"],"names":["HeaderTop","props","className","style","backgroundImage","to","MatchItem","href","matchStatus","onClick","onMatchClickHandler","width","height","viewBox","xmlns","d","stroke","strokeWidth","fill","starColor","id","x1","y1","x2","y2","offset","stopColor","type","time","date","src","alt","teamLogo1","teamLogo2","lose1","teamName1","teamCoef1","scoreTeam1","lose2","teamName2","teamCoef2","scoreTeam2","system","result","partnerLogo","Matches","matchesList","state","map","element","statusColor","table","status","teams","wins","key","e","preventDefault","BattleItem","battleStatus","onbattleClickHandler","subject","group1","group2","num","leftTime","winner","Battles","battlesList","onBattleClickHandler","groups","Games","matches","battles","default","path","render","Component","App","Boolean","window","location","hostname","match","Application","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.47204ee6.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../../style/main.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst HeaderTop = (props) => {\r\n    return (\r\n        <header\r\n            className=\"header\"\r\n            style={{ backgroundImage: 'url(./imgs/topBg.jpg)' }}>\r\n            <div className=\"header__wrap\"\r\n            style={{ backgroundImage: 'url(./imgs/topBgMob.jpg)' }}>\r\n                <div className=\"container\">\r\n                    <h1 className=\"title header__title\">\r\n                        Make me up!\r\n                </h1>\r\n                    <div className=\"header__nav\">\r\n                        <NavLink to=\"/matches\" className=\"header__item btn\">\r\n                            Matches\r\n                    </NavLink>\r\n                        <NavLink to=\"/battles\" className=\"header__item btn\">\r\n                            Battles\r\n                    </NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default HeaderTop;","import React from 'react';\r\nimport '../../../../style/main.scss'\r\n\r\nconst MatchItem = (props) => {\r\n\r\n    return (\r\n        <a href=\"#\" \r\n            className={`match ${props.matchStatus}`} \r\n            onClick={props.onMatchClickHandler}>\r\n            <svg className=\"svgStar\" width=\"182\" height=\"164\" viewBox=\"0 0 182 164\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M181.767 155.832L117.839 103.14L6.56497 164L71.1271 58.3003L0 0H113.255H182L181.767 155.832Z\" \r\n                    stroke=\"rgba(151, 151, 151, .1)\"\r\n                    strokeWidth=\"1px\"\r\n                    fill={props.starColor}\r\n                    />\r\n                <defs>\r\n                    <linearGradient id=\"Gradient1\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n                        <stop offset=\"38.93%\" stopColor=\"#F3FCFF\"/>\r\n                        <stop offset=\"97.32%\" stopColor=\"#E1E5EE\" />\r\n                    </linearGradient>\r\n                </defs>\r\n            </svg>\r\n            <span className=\"match__type\">\r\n                {props.type}\r\n            </span>\r\n            <p className=\"match__table\">\r\n                <span className=\"match__time\"> \r\n                    {props.time}\r\n                </span>\r\n                <span className=\"match__date\">\r\n                    {props.date}\r\n                </span>\r\n            </p>\r\n            <p className=\"match__liveTime\">\r\n                <img src=\"./imgs/playIcon.png\" alt=\"live\" className=\"match__playIcon\"/>\r\n                <span className=\"match__watch\">\r\n                    Watch Live!\r\n                </span>\r\n            </p>\r\n            <div className=\"match__teams\">\r\n                <div className=\"match__team match__team_1\">\r\n                    <img src={`./imgs/teams-logo/${props.teamLogo1}`}/>\r\n                </div>\r\n                <div className=\"match__team match__team_2\">\r\n                    <img src={`./imgs/teams-logo/${props.teamLogo2}`}/> \r\n                </div>\r\n            </div>\r\n            <ul className=\"match__bet\">\r\n                <li className={`match__ratio ${props.lose1}`}>\r\n                    <span className=\"match__team-name\">\r\n                        {props.teamName1}\r\n                    </span>\r\n                    <span className=\"match__coef\">\r\n                        {props.teamCoef1}\r\n                    </span>\r\n                    <span className=\"match__score\">\r\n                        {props.scoreTeam1}\r\n                    </span>\r\n                </li>\r\n                <li className={`match__ratio match__ratio_2 ${props.lose2}`}>\r\n                    <span className=\"match__team-name\">\r\n                        {props.teamName2}\r\n                    </span>\r\n                    <span className=\"match__coef\">\r\n                        {props.teamCoef2}\r\n                    </span>\r\n                    <span className=\"match__score\">\r\n                        {props.scoreTeam2}\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n            <div className=\"match__info\">\r\n                <div className=\"match__system\">\r\n                    {props.system}\r\n                    {props.result}\r\n                </div>\r\n                <div className=\"match__partner\">\r\n                    <img src={`./imgs/${props.partnerLogo}`}/>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default MatchItem;","import React from 'react';\r\nimport '../../../style/main.scss'\r\nimport MatchItem from './MatchItem/MatchItem'\r\n\r\nconst Matches = (props) => {\r\n\r\n    const matchesList = props.state.map((element) => {\r\n        let statusColor,\r\n            matchStatus = '',\r\n            lose1 = '',\r\n            lose2 = '',\r\n            system = '',\r\n            result = '';\r\n\r\n        if (element.table.status === 'live') {\r\n            statusColor = '#EA5656';\r\n            matchStatus = 'live';\r\n            system = element.system;\r\n        } else if (element.table.status === 'soon') {\r\n            statusColor = 'url(#Gradient1)';\r\n            system = element.system;\r\n        } else {\r\n            statusColor = '#F9F9F9';\r\n            matchStatus = 'end';\r\n            result = element.result\r\n\r\n            if (element.teams[0].wins > element.teams[1].wins) {\r\n                lose2 = 'lose';\r\n            } else {\r\n                lose1 = 'lose'\r\n            }\r\n        }\r\n\r\n    const onMatchClickHandler = (status) => {\r\n        if (!(status === 'live')) {\r\n            return (e) => {\r\n                e.preventDefault();\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <MatchItem \r\n            type={element.type}\r\n            time={element.table.time}\r\n            date={element.table.date}\r\n            teamLogo1={element.teams[0].teamLogo1}\r\n            teamLogo2={element.teams[1].teamLogo2}\r\n            teamName1={element.teams[0].teamName1}\r\n            teamName2={element.teams[1].teamName2}\r\n            teamCoef1={element.teams[0].teamCoef1}\r\n            teamCoef2={element.teams[1].teamCoef2}\r\n            system={system}\r\n            partnerLogo={element.partnerLogo}\r\n            starColor={statusColor}\r\n            key={element.id}\r\n            onMatchClickHandler={onMatchClickHandler(element.table.status)}\r\n            matchStatus={matchStatus}\r\n            scoreTeam1={element.teams[0].wins}\r\n            scoreTeam2={element.teams[1].wins}\r\n            lose1={lose1}\r\n            lose2={lose2}\r\n            result={result}\r\n        />\r\n    )\r\n    })\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"matchBox\">\r\n                {matchesList}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Matches;","import React from 'react';\r\nimport '../../../../style/main.scss'\r\n\r\nconst BattleItem = (props) => {\r\n    \r\n    return (\r\n        <a href=\"#\" \r\n            className={`battle ${props.battleStatus}`} \r\n            onClick={props.onbattleClickHandler}>\r\n            <svg className=\"svgStar\" width=\"182\" height=\"164\" viewBox=\"0 0 182 164\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                <path d=\"M181.767 155.832L117.839 103.14L6.56497 164L71.1271 58.3003L0 0H113.255H182L181.767 155.832Z\" \r\n                    stroke=\"rgba(151, 151, 151, .1)\"\r\n                    strokeWidth=\"1px\"\r\n                    fill={props.starColor}\r\n                    />\r\n                <defs>\r\n                    <linearGradient id=\"Gradient1\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\r\n                        <stop offset=\"38.93%\" stopColor=\"#F3FCFF\"/>\r\n                        <stop offset=\"97.32%\" stopColor=\"#E1E5EE\" />\r\n                    </linearGradient>\r\n                </defs>\r\n            </svg>\r\n            <span className=\"battle__type\">\r\n                {props.type}\r\n            </span>\r\n            <p className=\"battle__table\">\r\n                <span className=\"battle__time\"> \r\n                    {props.time}\r\n                </span>\r\n                <span className=\"battle__date\">\r\n                    {props.date}\r\n                </span>\r\n            </p>\r\n            <p className=\"battle__liveTime\">\r\n                <img src=\"./imgs/playIcon.png\" alt=\"live\" className=\"battle__playIcon\"/>\r\n                <span className=\"battle__watch\">\r\n                    Watch Live!\r\n                </span>\r\n            </p>\r\n            <div className=\"battle__subject\">\r\n                <img src={`./imgs/${props.subject}`}/>\r\n            </div>\r\n            <div className=\"battle__event\">\r\n                <div className='battle__groups'>\r\n                    <span className=\"battle__groupItem\">\r\n                        Group {props.group1}\r\n                    </span>\r\n                    <span className=\"battle__groupItem battle__groupItem_2\">\r\n                        Group {props.group2}\r\n                    </span>\r\n                </div>\r\n                <div className='battle__num'>\r\n                    Match #{props.num}\r\n                </div>\r\n            </div>\r\n            <div className=\"battle__info\">\r\n                <img src=\"./imgs/cup.svg\" alt=\"cup\" className=\"battle__cup\" />\r\n                {props.leftTime}\r\n                {props.winner}\r\n                {props.map}\r\n            </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default BattleItem;","import React from 'react';\r\nimport '../../../style/main.scss'\r\nimport BattleItem from './BattleItem/BattleItem';\r\n\r\nconst Battles = (props) => {\r\n\r\n    const battlesList = props.state.map((element) => {\r\n        let statusColor,\r\n            battleStatus = '',\r\n            map = '',\r\n            leftTime = '',\r\n            result = '';\r\n\r\n        if (element.table.status === 'live') {\r\n            statusColor = '#EA5656';\r\n            battleStatus = 'live';\r\n            map = element.map;\r\n        } else if (element.table.status === 'soon') {\r\n            statusColor = 'url(#Gradient1)';\r\n            leftTime = element.leftTime;\r\n        } else {\r\n            statusColor = '#F9F9F9';\r\n            battleStatus = 'end';\r\n            result = element.result\r\n        }\r\n\r\n        const onBattleClickHandler = (status) => {\r\n            if (!(status === 'live')) {\r\n                return (e) => {\r\n                    e.preventDefault();\r\n                }\r\n            }\r\n        }\r\n\r\n        return (\r\n            <BattleItem\r\n                type={element.type}\r\n                time={element.table.time}\r\n                date={element.table.date}\r\n                subject={element.subject}\r\n                leftTime={leftTime}\r\n                partnerLogo={element.partnerLogo}\r\n                starColor={statusColor}\r\n                map={map}\r\n                key={element.id}\r\n                num={element.id}\r\n                winner={element.winner}\r\n                onBattleClickHandler={onBattleClickHandler(element.table.status)}\r\n                battleStatus={battleStatus}\r\n                result={result}\r\n                group1={element.groups[0]}\r\n                group2={element.groups[1]}\r\n            />\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"battleBox\">\r\n                {battlesList}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Battles;","import React, { Component } from 'react';\r\nimport HeaderTop from '../components/HeaderTop/HeaderTop';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport Matches from '../components/Content/Matches/Matches';\r\nimport Battles from '../components/Content/Battles/Battles';\r\n\r\n\r\n\r\nclass Games extends Component {\r\n    state = {\r\n        matches: [\r\n            {\r\n                id: 1,\r\n                type: 'Asia Minor: Play-Off',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: '29 октября',\r\n                    status: 'live'\r\n                },\r\n                teams: [\r\n                    {\r\n                        teamLogo1: 'team1.png',\r\n                        teamName1: 'Albert Warren',\r\n                        teamCoef1: 3.22,\r\n                        wins: null\r\n                    },\r\n                    {\r\n                        teamLogo2: 'team2.png',\r\n                        teamName2: 'Gloria Henry',\r\n                        teamCoef2: 53.22,\r\n                        wins: null\r\n                    }\r\n                ],\r\n                system: 'Bo 3',\r\n                result: null,\r\n                partnerLogo: 'partner.png'\r\n            },\r\n            {\r\n                id: 2,\r\n                type: 'Asia Minor: Play-Off',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: '29 октября',\r\n                    status: 'soon'\r\n                },\r\n                teams: [\r\n                    {\r\n                        teamLogo1: 'team3.png',\r\n                        teamName1: 'Regina Watson',\r\n                        teamCoef1: 3.22,\r\n                        wins: null\r\n                    },\r\n                    {\r\n                        teamLogo2: 'team4.png',\r\n                        teamName2: 'Kathryn Jones',\r\n                        teamCoef2: 53.22,\r\n                        wins: null\r\n                    }\r\n                ],\r\n                system: 'Starts in: 5 hours 39 min • Bо 3',\r\n                result: null,\r\n                partnerLogo: 'partner.png'\r\n            },\r\n            {\r\n                id: 3,\r\n                type: 'Asia Minor: Play-Off',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: '29 октября',\r\n                    status: 'soon'\r\n                },\r\n                teams: [\r\n                    {\r\n                        teamLogo1: 'team2.png',\r\n                        teamName1: 'Ricardo Hawkins',\r\n                        teamCoef1: 3.22,\r\n                        wins: null\r\n                    },\r\n                    {\r\n                        teamLogo2: 'team5.png',\r\n                        teamName2: 'Bruce Simmons',\r\n                        teamCoef2: 53.22,\r\n                        wins: null\r\n                    }\r\n                ],\r\n                system: 'Starts in: 5 hours 39 min • Bо 3',\r\n                result: null,\r\n                partnerLogo: 'partner.png'\r\n            },\r\n            {\r\n                id: 4,\r\n                type: 'Asia Minor: Play-Off',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: '29 октября',\r\n                    status: 'soon'\r\n                },\r\n                teams: [\r\n                    {\r\n                        teamLogo1: 'team6.png',\r\n                        teamName1: 'Jenny Bell',\r\n                        teamCoef1: 3.22,\r\n                        wins: null\r\n                    },\r\n                    {\r\n                        teamLogo2: 'team7.png',\r\n                        teamName2: 'Arlene Robertson',\r\n                        teamCoef2: 53.22,\r\n                        wins: null\r\n                    }\r\n                ],\r\n                system: 'Starts in: 5 hours 39 min • Bо 3',\r\n                result: null,\r\n                partnerLogo: 'partner.png'\r\n            },\r\n            {\r\n                id: 5,\r\n                type: 'Asia Minor: Play-Off',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: '29 октября',\r\n                    status: 'end'\r\n                },\r\n                teams: [\r\n                    {\r\n                        teamLogo1: 'team1.png',\r\n                        teamName1: 'Courtney Alexander',\r\n                        teamCoef1: 3.22,\r\n                        wins: 0\r\n                    },\r\n                    {\r\n                        teamLogo2: 'team3.png',\r\n                        teamName2: 'Judith Nguyen',\r\n                        teamCoef2: 53.22,\r\n                        wins: 3\r\n                    }\r\n                ],\r\n                system: 'Starts in: 5 hours 39 min • Bо 3',\r\n                result: '1:0 • 1:0 • 1:0',\r\n                partnerLogo: 'partner.png'\r\n            },\r\n            {\r\n                id: 6,\r\n                type: 'Asia Minor: Play-Off',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: '29 октября',\r\n                    status: 'end'\r\n                },\r\n                teams: [\r\n                    {\r\n                        teamLogo1: 'team1.png',\r\n                        teamName1: 'Priscilla Fisher',\r\n                        teamCoef1: 3.22,\r\n                        wins: 3\r\n                    },\r\n                    {\r\n                        teamLogo2: 'team4.png',\r\n                        teamName2: 'Arlene Black',\r\n                        teamCoef2: 53.22,\r\n                        wins: 0\r\n                    }\r\n                ],\r\n                system: 'Starts in: 5 hours 39 min • Bо 3',\r\n                result: '1:0 • 1:0 • 1:0',\r\n                partnerLogo: 'partner.png'\r\n            },\r\n            {\r\n                id: 7,\r\n                type: 'Asia Minor: Play-Off',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: '29 октября',\r\n                    status: 'end'\r\n                },\r\n                teams: [\r\n                    {\r\n                        teamLogo1: 'team5.png',\r\n                        teamName1: 'Cody Howard',\r\n                        teamCoef1: 3.22,\r\n                        wins: 0\r\n                    },\r\n                    {\r\n                        teamLogo2: 'team7.png',\r\n                        teamName2: 'Brandon Mccoy',\r\n                        teamCoef2: 53.22,\r\n                        wins: 3\r\n                    }\r\n                ],\r\n                system: 'Starts in: 5 hours 39 min • Bо 3',\r\n                result: '1:0 • 1:0 • 1:0',\r\n                partnerLogo: 'partner.png'\r\n            },\r\n            {\r\n                id: 8,\r\n                type: 'Asia Minor: Play-Off',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: '29 октября',\r\n                    status: 'end'\r\n                },\r\n                teams: [\r\n                    {\r\n                        teamLogo1: 'team1.png',\r\n                        teamName1: 'Jorge Fox',\r\n                        teamCoef1: 3.22,\r\n                        wins: 0\r\n                    },\r\n                    {\r\n                        teamLogo2: 'team6.png',\r\n                        teamName2: 'Zack Miles',\r\n                        teamCoef2: 53.22,\r\n                        wins: 3\r\n                    }\r\n                ],\r\n                system: 'Starts in: 5 hours 39 min • Bо 3',\r\n                result: '1:0 • 1:0 • 1:0',\r\n                partnerLogo: 'partner.png'\r\n            }\r\n        ],\r\n        battles: [\r\n            {\r\n                id: 1,\r\n                type: 'Group Stage',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: 'March 8',\r\n                    status: 'live'\r\n                },\r\n                groups : ['A', 'B'],\r\n                subject: 'groupLogo.png',\r\n                winner: null,\r\n                leftTime: 'Starts in: 5h 39min • Map: Erangel',\r\n                partnerLogo: 'partner.png',\r\n                map: 'Map: Erangel'\r\n            },\r\n            {\r\n                id: 2,\r\n                type: 'Group Stage',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: 'March 8',\r\n                    status: 'soon'\r\n                },\r\n                groups : ['A', 'B'],\r\n                subject: 'groupLogo.png',\r\n                winner: null,\r\n                leftTime: 'Starts in: 5h 39min • Map: Erangel',\r\n                partnerLogo: 'partner.png',\r\n                map: 'Map: Erangel'\r\n            },\r\n            {\r\n                id: 3,\r\n                type: 'Group Stage',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: 'March 8',\r\n                    status: 'soon'\r\n                },\r\n                groups : ['A', 'B'],\r\n                subject: 'groupLogo.png',\r\n                winner: null,\r\n                leftTime: 'Starts in: 5h 39min • Map: Erangel',\r\n                partnerLogo: 'partner.png',\r\n                map: 'Map: Erangel'\r\n            },\r\n            {\r\n                id: 4,\r\n                type: 'Group Stage',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: 'March 8',\r\n                    status: 'soon'\r\n                },\r\n                groups : ['A', 'B'],\r\n                subject: 'groupLogo.png',\r\n                winner: null,\r\n                leftTime: 'Starts in: 5h 39min • Map: Erangel',\r\n                partnerLogo: 'partner.png',\r\n                map: 'Map: Erangel'\r\n            },\r\n            {\r\n                id: 5,\r\n                type: 'Group Stage',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: 'March 8',\r\n                    status: 'end'\r\n                },\r\n                groups : ['A', 'B'],\r\n                subject: 'groupLogo.png',\r\n                winner: 'Natus Vincere (A) - 233pts',\r\n                leftTime: 'Starts in: 5h 39min • Map: Erangel',\r\n                partnerLogo: 'partner.png',\r\n                map: 'Map: Erangel'\r\n            },\r\n            {\r\n                id: 6,\r\n                type: 'Group Stage',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: 'March 8',\r\n                    status: 'end'\r\n                },\r\n                groups : ['A', 'B'],\r\n                subject: 'groupLogo.png',\r\n                winner: 'Natus Vincere (A) - 233pts',\r\n                leftTime: 'Starts in: 5h 39min • Map: Erangel',\r\n                partnerLogo: 'partner.png',\r\n                map: 'Map: Erangel'\r\n            },\r\n            {\r\n                id: 7,\r\n                type: 'Group Stage',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: 'March 8',\r\n                    status: 'end'\r\n                },\r\n                groups : ['A', 'B'],\r\n                subject: 'groupLogo.png',\r\n                winner: 'Natus Vincere (A) - 233pts',\r\n                leftTime: 'Starts in: 5h 39min • Map: Erangel',\r\n                partnerLogo: 'partner.png',\r\n                map: 'Map: Erangel'\r\n            },\r\n            {\r\n                id: 8,\r\n                type: 'Group Stage',\r\n                table: {\r\n                    time: '19:00',\r\n                    date: 'March 8',\r\n                    status: 'end'\r\n                },\r\n                groups : ['A', 'B'],\r\n                subject: 'groupLogo.png',\r\n                winner: 'Natus Vincere (A) - 233pts',\r\n                leftTime: 'Starts in: 5h 39min • Map: Erangel',\r\n                partnerLogo: 'partner.png',\r\n                map: 'Map: Erangel'\r\n            }\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"App\">\r\n                <HeaderTop />\r\n                <div className=\"content-wrapper\">\r\n                    <Route default path='/matches' render={() => <Matches \r\n                        state={this.state.matches}\r\n                    />}/>\r\n                    <Route path='/battles' render={() => <Battles \r\n                        state={this.state.battles}\r\n                    />}/>\r\n                    <Route path=\"/\">\r\n                        <Redirect to=\"/matches\" />\r\n                    </Route>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Games;","import React from 'react';\nimport Games from './container/Games'\n\nconst App = () => {\n  return (\n    <Games />\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst Application = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\nReactDOM.render(Application, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}